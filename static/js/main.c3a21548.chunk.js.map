{"version":3,"sources":["App.js","index.js"],"names":["App","useState","columns","setColumns","rows","setRows","cgap","setCgap","rgap","setRgap","divs","setDivs","principalStyle","gridTemplateColumns","gridTemplateRows","gridGap","id","href","target","rel","style","className","totalDivs","i","key","Math","random","length","map","item","criarDivs","htmlFor","name","value","onChange","e","type","onClick","preventDefault","ReactDOM","render","document","getElementById"],"mappings":"wKAsGeA,MAlGf,WAAgB,IAAD,EAEmBC,mBAAS,GAF5B,mBAELC,EAFK,KAEIC,EAFJ,OAGaF,mBAAS,GAHtB,mBAGLG,EAHK,KAGCC,EAHD,OAIaJ,mBAAS,GAJtB,mBAILK,EAJK,KAICC,EAJD,OAKaN,mBAAS,GALtB,mBAKLO,EALK,KAKCC,EALD,OAMaR,mBAAS,IANtB,mBAMLS,EANK,KAMCC,EAND,KAkDPC,EAAiB,CAErBC,oBAAoB,UAAD,OAAYX,EAAZ,UACnBY,iBAAiB,UAAD,OAAYV,EAAZ,UAChBW,QAAQ,GAAD,OAAKP,EAAL,cAAeF,EAAf,OAIT,OACE,yBAAKU,GAAG,aAEN,yBAAKA,GAAG,aACN,4CACA,yBAAKA,GAAG,eACR,sDAEE,uBAAGC,KAAK,gCACNC,OAAO,SAASC,IAAI,uBADtB,mBAMJ,yBAAKH,GAAG,YACN,yBAAKI,MAAOR,EAAgBS,UAAU,aApC5C,WAIE,IAFA,IAAIC,EAAYpB,EAAUE,EAEjBmB,EAAI,EAAGA,EAAID,EAAWC,IAC7Bb,EAAKa,GAAK,yBAAKC,IAAKC,KAAKC,WACzBhB,EAAKiB,OAASL,EAGhB,OAAOZ,EAAKkB,KAAI,SAAAC,GAAI,OAAIA,KA4BjBC,IAEH,yBAAKT,UAAU,SACb,8BACE,2BAAOU,QAAQ,OAAf,0BACA,2BAAOC,KAAK,MAAMC,MAAO/B,EAASgC,SAvE5C,SAAuBC,GACrBhC,EAAWgC,EAAEjB,OAAOe,QAsE+CG,KAAK,WAChE,6BAAK,6BACL,2BAAOL,QAAQ,OAAf,uBACA,2BAAOC,KAAK,MAAMC,MAAO7B,EAAM8B,SAtEzC,SAAoBC,GAClB9B,EAAQ8B,EAAEjB,OAAOe,QAqE4CG,KAAK,WAC1D,6BAAK,6BACL,2BAAOL,QAAQ,OAAf,mBACA,2BAAOC,KAAK,MAAMC,MAAO3B,EAAM4B,SArEzC,SAAoBC,GAClB5B,EAAQ4B,EAAEjB,OAAOe,QAoE4CG,KAAK,WAC1D,6BAAK,6BACL,2BAAOL,QAAQ,OAAf,iBACA,2BAAOC,KAAK,MAAMC,MAAOzB,EAAM0B,SApEzC,SAAoBC,GAClB1B,EAAQ0B,EAAEjB,OAAOe,QAmE4CG,KAAK,WAC1D,6BAAK,6BACL,4BAAQC,QAlElB,SAAsBF,GACpBA,EAAEG,iBASF3B,EAAQD,KAwDA,kBC1FZ6B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.c3a21548.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport './style.css';\n\nfunction App() {\n\n  const [ columns, setColumns ] = useState(1);\n  const [ rows, setRows ] = useState(1);\n  const [ cgap, setCgap ] = useState(0);\n  const [ rgap, setRgap ] = useState(0);\n  const [ divs, setDivs ] = useState([]);\n\n  function handleColumns(e) {\n    setColumns(e.target.value);\n  }\n\n  function handleRows(e) {\n    setRows(e.target.value);    \n  }\n\n  function handleCgap(e) {\n    setCgap(e.target.value);\n  }\n  \n  function handleRgap(e) {\n    setRgap(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    \n    // const mostrar = \n    //   ` grid-template-columns: repeat(${columns}, 1fr);\n    //     grid-template-rows: repeat(${rows}, 1fr);\n    //     grid-column-gap: ${cgap}px;\n    //     grid-row-gap: ${rgap}px;\n    //   `\n    \n    setDivs(divs);\n  }\n  \n  function criarDivs() {\n    \n    let totalDivs = columns * rows;\n\n    for (let i = 0; i < totalDivs; i++) {\n      divs[i] = <div key={Math.random()}></div>;\n      divs.length = totalDivs;\n    }\n    \n    return divs.map(item => item);\n\n  }\n\n  const principalStyle = {\n\n    gridTemplateColumns: `repeat(${columns}, 1fr)`,\n    gridTemplateRows: `repeat(${rows}, 1fr)`,\n    gridGap: `${rgap}px ${cgap}px`,\n  \n  }\n\n  return (\n    <div id=\"container\">\n\n      <div id=\"cabecalho\">\n        <h1>Get Grid CSS</h1>\n        <div id=\"description\">\n        <p>\n          Developed with â˜• by\n          <a href=\"https://github.com/axelrammon\" \n            target=\"_blank\" rel=\"noopener noreferrer\"> Axel Rammon</a>\n        </p>\n      </div>\n      </div>\n\n      <div id=\"conteudo\">\n        <div style={principalStyle} className=\"principal\">\n          {criarDivs(divs)}\n        </div>\n        <div className=\"dados\">\n          <form>\n            <label htmlFor=\"gtc\">grid-template-columns:</label> \n            <input name=\"gtc\" value={columns} onChange={handleColumns} type=\"number\"/>\n            <br/><br/>\n            <label htmlFor=\"gtr\">grid-template-rows:</label> \n            <input name=\"gtr\" value={rows} onChange={handleRows} type=\"number\"/>\n            <br/><br/>\n            <label htmlFor=\"ggc\">grid-gap-colum:</label> \n            <input name=\"ggc\" value={cgap} onChange={handleCgap} type=\"number\"/>\n            <br/><br/>\n            <label htmlFor=\"ggr\">grid-gap-row:</label> \n            <input name=\"ggr\" value={rgap} onChange={handleRgap} type=\"number\"/>\n            <br/><br/>\n            <button onClick={handleSubmit}>Show code</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}